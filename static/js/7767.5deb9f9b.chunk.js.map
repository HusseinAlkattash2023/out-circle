{"version":3,"file":"static/js/7767.5deb9f9b.chunk.js","mappings":"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","sources":["Pages/Login/index.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\r\nimport { Link , useNavigate } from \"react-router-dom\";\r\nimport back from \"../../Assets/images/back.png\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport Axios from \"axios\";\r\nimport login from \"../../Assets/images/Mask Group 2.png\";\r\nimport logoLogin from \"../../Assets/images/logoLogin.png\";\r\nimport \"./index.css\";\r\n\r\nfunction Login() {\r\n  const intialValues = { email: \"\", password: \"\", user_type: \"\" };\r\n  const [formValues, setFormValues] = useState(intialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setFormErrors(validate(formValues));\r\n    Axios.get(\r\n      `http://localhost:8000/api/users/user-info?${`input=${formValues.email}`}&${`password=${formValues.password}`}&${`user_type=${formValues.user_type}`}`\r\n    )\r\n      .then((res) => {\r\n        let data = res.data;\r\n        if (typeof data === \"string\") {\r\n          toast.error(res.data);\r\n        } else {\r\n          switch (formValues.user_type) {\r\n            case \"companies\":\r\n                setTimeout(() => {\r\n                    navigate(\"/corporate\")\r\n                }, 3000);\r\n                break;\r\n            case \"institute\":\r\n                setTimeout(() => {\r\n                    navigate(\"/institute\")\r\n                }, 3000);\r\n                break;\r\n            case \"scientific_careers\":\r\n                setTimeout(() => {\r\n                    navigate(\"/scientific\")\r\n                    }, 3000);\r\n                break;\r\n            case \"craftsmen\":\r\n                setTimeout(() => {\r\n                    navigate(\"/handicraft\")\r\n                }, 3000);\r\n                break;\r\n            case \"individuals\":\r\n                setTimeout(() => {\r\n                    navigate(\"/individuals\")\r\n                }, 3000);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n          toast.success(\"Logged in successfully...\");\r\n          localStorage.setItem(\"users\", JSON.stringify(data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  const validate = (values) => {\r\n    let errors = {};\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.email) {\r\n      errors.email = \"Please enter email\";\r\n    } else if (!regex.test(values.email) && typeof values.email === Number) {\r\n      errors.email = \"Invalid email format\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Please enter password\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    }\r\n    if (!values.user_type) {\r\n      errors.user_type = \"Please enter type account\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <Link to=\"/\" className=\"back\">\r\n        <span>Back</span>\r\n        <img src={back} alt=\"\" />\r\n      </Link>\r\n      <div className=\"login_\">\r\n          <div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <img src={logoLogin} alt=\"\" />\r\n            </div>\r\n            <div>\r\n              <div><Toaster /></div>\r\n              <form onSubmit={handleSubmit} noValidate>\r\n                <div className=\"bar\">\r\n                  <div className=\"select\">\r\n                    <label>select your type account</label>\r\n                    <br />\r\n                    <select\r\n                      name=\"user_type\"\r\n                      value={formValues.user_type}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <option value=\"\">account type</option>\r\n                      <option value=\"companies\">Corporate</option>\r\n                      <option value=\"institutes\">Institute</option>\r\n                      <option value=\"scientific_careers\">\r\n                        Scientific Profissional\r\n                      </option>\r\n                      <option value=\"craftsmen\">Handicraft</option>\r\n                      <option value=\"individuals\">Individuals</option>\r\n                    </select>\r\n                    {formErrors.user_type && (\r\n                      <span className=\"error\" style={{ color: \"red\" }}>\r\n                        {formErrors.user_type}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"email\">\r\n                    <label htmlFor=\"email\">mobile number or email</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        value={formValues.email}\r\n                        onChange={handleChange}\r\n                        className={formErrors.email && \"input-error\"}\r\n                    />\r\n                    {formErrors.email && (\r\n                        <span className=\"error\" style={{ color: \"red\" }}>\r\n                        {formErrors.email}\r\n                        </span>\r\n                    )}\r\n                    </div>\r\n                    <div className=\"password\">\r\n                    <label htmlFor=\"password_\">password</label>\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={formValues.password}\r\n                        onChange={handleChange}\r\n                        className={formErrors.password && \"input-error\"}\r\n                    />\r\n                    {formErrors.password && (\r\n                        <span className=\"error\" style={{ color: \"red\" }}>\r\n                            {formErrors.password}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n                </div>\r\n                <Link to=\"/forget-password\" className=\"forget\">\r\n                    forget password\r\n                </Link>\r\n                <button type=\"submit\" className=\"loginButton mt-1\">\r\n                    login\r\n                </button>\r\n                <br />\r\n            </form>\r\n            <div className=\"register mt-2\">\r\n                <p className=\"my-0\">don't have an account?</p>\r\n                <Link to=\"/register\">\r\n                    <button>Register</button>\r\n                </Link>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"section2\">\r\n        <img src={login} alt=\"\" />\r\n    </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default Login;\r\n"],"names":["useState","email","password","user_type","formValues","setFormValues","formErrors","setFormErrors","navigate","useNavigate","handleChange","e","target","name","value","validate","values","errors","test","Number","length","className","to","src","back","alt","style","display","justifyContent","alignItems","logoLogin","onSubmit","preventDefault","Axios","then","res","data","toast","setTimeout","localStorage","setItem","JSON","stringify","catch","err","console","error","noValidate","onChange","color","htmlFor","type","id","login"],"sourceRoot":""}