{"version":3,"file":"static/js/4711.846fa57d.chunk.js","mappings":"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","sources":["Pages/ForgetPass/index-ar.js","Pages/ForgetPass/index.js"],"sourcesContent":["import React , {useState , useEffect} from 'react'\r\nimport {useNavigate} from 'react-router-dom'\r\nimport password from '../../Assets/images/password.svg'\r\nimport './index'\r\nimport Axios from \"axios\";\r\nimport image from '../../Assets/images/ar_photo/login.png'\r\nimport './index.css'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    email: yup.string().email().required(\"اكتب ايميلك من فضلك\"),\r\n  }).required();\r\n\r\nconst ForgetPassAr = () => {\r\n  const [email , setEmail] = useState(\"\");\r\n  const { register, handleSubmit , formState:{errors}} = useForm({resolver: yupResolver(schema)});\r\n  const navigate = useNavigate()\r\n  \r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"is-user-login\")) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  const BASE_API_URL = useSelector((state) => state.BASE_API_URL);\r\n\r\n  const onSubmit = () => {\r\n    Axios.post(`${BASE_API_URL}/api/users/forget-password?email=${email}`)\r\n    .then(res => {\r\n      const response = res.data\r\n      if(typeof response === \"string\"){\r\n        toast.error(\"...عذرا الحساب غير موجود\")\r\n      }else{\r\n        setTimeout(() => {\r\n          navigate('/reset-password-ar')\r\n        }, 4000);\r\n        toast.success(\"...تحقق من بريدك الالكتروني\");\r\n        localStorage.setItem(\"user_id\",response.user_id);\r\n        localStorage.setItem(\"account_type\",response.account_type);\r\n        localStorage.setItem(\"code\",response.code[0]);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"forgetpass\">\r\n    <div><Toaster/></div>\r\n    <div className='body_ar'>\r\n        <header>\r\n            <img src={password} alt=\"\"/>\r\n            <h2>!نسيت كلمة المرور</h2>\r\n        </header>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation\">\r\n            <div className='pass'>\r\n            <label>أكتب ايميلك من فضلك</label>\r\n            <input type=\"email\"  {...register(\"email\")} value={email} onChange={(e)=> {setEmail(e.target.value)}}/>\r\n            <span>{errors.email?.message}</span>\r\n            </div>\r\n            <button type='submit'>\r\n                إرسال\r\n            </button>\r\n        </form>\r\n    </div>\r\n    <div className=\"image_ar\">\r\n      <img src={image} alt=\"\"/>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassAr;","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport password from \"../../Assets/images/password.svg\";\r\nimport \"./index\";\r\nimport Axios from \"axios\";\r\nimport image from \"../../Assets/images/Mask Group 2.png\";\r\nimport \"./index.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst schema = yup\r\n  .object({\r\n    email: yup.string().email().required(\"Please Enter your Email\"),\r\n  })\r\n  .required();\r\n\r\nconst ForgetPass = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"is-user-login\")) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  const BASE_API_URL = useSelector((state) => state.BASE_API_URL);\r\n\r\n  const onSubmit = () => {\r\n    Axios.post(`${BASE_API_URL}/api/users/forget-password?email=${email}`)\r\n      .then((res) => {\r\n        const response = res.data;\r\n        if (typeof response === \"string\") {\r\n          toast.error(\"Sorry, the account does not exist...\");\r\n        } else {\r\n          toast.success(\"Check your email...\");\r\n          setTimeout(() => {\r\n            navigate(\"/reset-password\");\r\n          }, 4000);\r\n          localStorage.setItem(\"user_id\", response.user_id);\r\n          localStorage.setItem(\"account_type\", response.account_type);\r\n          localStorage.setItem(\"code\", response.code[0]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgetpass\">\r\n      <div>\r\n        <Toaster />\r\n      </div>\r\n      <div className=\"body\">\r\n        <header>\r\n          <h2>forget password</h2>\r\n          <img src={password} alt=\"\" />\r\n        </header>\r\n        <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation\">\r\n          <div className=\"pass\">\r\n            <label>Please Write your email</label>\r\n            <input\r\n              type=\"email\"\r\n              {...register(\"email\")}\r\n              value={email}\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n            <span style={{ color: \"red\" }}>{errors.email?.message}</span>\r\n          </div>\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n      <div className=\"image\">\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgetPass;\r\n"],"names":["schema","yup","email","required","useState","setEmail","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","navigate","useNavigate","useEffect","localStorage","getItem","BASE_API_URL","useSelector","state","className","src","password","alt","onSubmit","Axios","then","res","response","data","toast","setTimeout","setItem","user_id","account_type","code","catch","err","console","log","type","value","onChange","e","target","message","image","style","color"],"sourceRoot":""}